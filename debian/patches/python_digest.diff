Description: Upstreams ee13e251ac patch to remove python_digest dependency

--- django-tastypie-0.9.9.orig/setup.py
+++ django-tastypie-0.9.9/setup.py
@@ -19,12 +19,10 @@ setup(
     requires=[
         'mimeparse',
         'python_dateutil(>=1.5, < 2.0)',
-        'python_digest',
     ],
     install_requires=[
         'mimeparse',
         'python_dateutil >= 1.5, < 2.0',
-        'python_digest',
     ],
     classifiers=[
         'Development Status :: 4 - Beta',
--- django-tastypie-0.9.9.orig/tests/core/tests/authentication.py
+++ django-tastypie-0.9.9/tests/core/tests/authentication.py
@@ -1,5 +1,4 @@
 import base64
-import python_digest
 from django.contrib.auth.models import User
 from django.core import mail
 from django.http import HttpRequest
@@ -8,6 +7,12 @@ from tastypie.authentication import Auth
 from tastypie.http import HttpUnauthorized
 from tastypie.models import ApiKey
 
+# Be tricky.
+from tastypie.authentication import python_digest
+if python_digest is None:
+    import warnings
+    warnings.warn("Running tests without python_digest! Bad news!")
+
 
 class AuthenticationTestCase(TestCase):
     def test_is_authenticated(self):
--- django-tastypie-0.9.9.orig/tastypie/authentication.py
+++ django-tastypie-0.9.9/tastypie/authentication.py
@@ -1,11 +1,11 @@
 import base64
 import hmac
-import python_digest
 import time
 import uuid
 
 from django.conf import settings
 from django.contrib.auth import authenticate
+from django.core.exceptions import ImproperlyConfigured
 from tastypie.http import HttpUnauthorized
 
 try:
@@ -14,6 +14,10 @@ except ImportError:
     import sha
     sha1 = sha.sha
 
+try:
+    import python_digest
+except ImportError:
+    python_digest = None
 
 class Authentication(object):
     """
@@ -187,6 +191,9 @@ class DigestAuthentication(Authenticatio
         self.backend = backend
         self.realm = realm
     
+        if python_digest is None:
+            raise ImproperlyConfigured("The 'python_digest' package could not be imported. It is required for use with the 'DigestAuthentication' class.")
+
     def _unauthorized(self):
         response = HttpUnauthorized()
         new_uuid = uuid.uuid4()
